vector<int> find(int A[], int N , int X )
{
    int low = 0, high = N - 1;
int first = -1, last = -1;
// finding first occurence
while (low <= high) {
int mid = low + (high - low)/2;
if (X == A[mid]) {
first = mid;
high = mid-1;
}
else if (X < A[mid]) {
high = mid-1;
}
else if (X > A[mid]) {
low = mid+1;
}
}
// checking for last occurence
low = 0, high = N - 1;

while (low <= high) {
int mid = low + (high - low)/2;
if (X == A[mid]) {
last = mid;
low = mid+1;
}
else if (X < A[mid]) {
high = mid-1;
}
else if (X > A[mid]) {
low = mid+1;
}
}
vector <int> Result {first,last};
return Result;
}
